// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;

import 'app/data/models/producteur_model.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 2702537069272401708),
      name: 'Producteur',
      lastPropertyId: const obx_int.IdUid(9, 4533520729987224463),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 1496890476078671600),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 352775962046137181),
            name: 'nom',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 6745939833771918918),
            name: 'prenom',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 4156988938844669282),
            name: 'telephone',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 7166405309363894797),
            name: 'dateNaissance',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 5662257873904240802),
            name: 'lieuNaissance',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 855753359371712607),
            name: 'cooperative',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 302901253287939772),
            name: 'projet',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 4533520729987224463),
            name: 'sexe',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
obx.Store openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) {
  return obx.Store(getObjectBoxModel(),
      directory: directory,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(1, 2702537069272401708),
      lastIndexId: const obx_int.IdUid(0, 0),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    Producteur: obx_int.EntityDefinition<Producteur>(
        model: _entities[0],
        toOneRelations: (Producteur object) => [],
        toManyRelations: (Producteur object) => {},
        getId: (Producteur object) => object.id,
        setId: (Producteur object, int id) {
          object.id = id;
        },
        objectToFB: (Producteur object, fb.Builder fbb) {
          final nomOffset =
              object.nom == null ? null : fbb.writeString(object.nom!);
          final prenomOffset =
              object.prenom == null ? null : fbb.writeString(object.prenom!);
          final telephoneOffset = object.telephone == null
              ? null
              : fbb.writeString(object.telephone!);
          final lieuNaissanceOffset = object.lieuNaissance == null
              ? null
              : fbb.writeString(object.lieuNaissance!);
          final sexeOffset =
              object.sexe == null ? null : fbb.writeString(object.sexe!);
          fbb.startTable(10);
          fbb.addInt64(0, object.id ?? 0);
          fbb.addOffset(1, nomOffset);
          fbb.addOffset(2, prenomOffset);
          fbb.addOffset(3, telephoneOffset);
          fbb.addInt64(4, object.dateNaissance?.millisecondsSinceEpoch);
          fbb.addOffset(5, lieuNaissanceOffset);
          fbb.addInt64(6, object.cooperative);
          fbb.addInt64(7, object.projet);
          fbb.addOffset(8, sexeOffset);
          fbb.finish(fbb.endTable());
          return object.id ?? 0;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final dateNaissanceValue =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 12);
          final nomParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 6);
          final prenomParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 8);
          final sexeParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 20);
          final telephoneParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 10);
          final dateNaissanceParam = dateNaissanceValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(dateNaissanceValue);
          final lieuNaissanceParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 14);
          final cooperativeParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 16);
          final projetParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 18);
          final object = Producteur(
              nom: nomParam,
              prenom: prenomParam,
              sexe: sexeParam,
              telephone: telephoneParam,
              dateNaissance: dateNaissanceParam,
              lieuNaissance: lieuNaissanceParam,
              cooperative: cooperativeParam,
              projet: projetParam)
            ..id =
                const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 4);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [Producteur] entity fields to define ObjectBox queries.
class Producteur_ {
  /// See [Producteur.id].
  static final id =
      obx.QueryIntegerProperty<Producteur>(_entities[0].properties[0]);

  /// See [Producteur.nom].
  static final nom =
      obx.QueryStringProperty<Producteur>(_entities[0].properties[1]);

  /// See [Producteur.prenom].
  static final prenom =
      obx.QueryStringProperty<Producteur>(_entities[0].properties[2]);

  /// See [Producteur.telephone].
  static final telephone =
      obx.QueryStringProperty<Producteur>(_entities[0].properties[3]);

  /// See [Producteur.dateNaissance].
  static final dateNaissance =
      obx.QueryDateProperty<Producteur>(_entities[0].properties[4]);

  /// See [Producteur.lieuNaissance].
  static final lieuNaissance =
      obx.QueryStringProperty<Producteur>(_entities[0].properties[5]);

  /// See [Producteur.cooperative].
  static final cooperative =
      obx.QueryIntegerProperty<Producteur>(_entities[0].properties[6]);

  /// See [Producteur.projet].
  static final projet =
      obx.QueryIntegerProperty<Producteur>(_entities[0].properties[7]);

  /// See [Producteur.sexe].
  static final sexe =
      obx.QueryStringProperty<Producteur>(_entities[0].properties[8]);
}
